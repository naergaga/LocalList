@page
@using LocalList.Utilities.Model
@model LocalList.Pages.Projects.IndexModel

@{
    ViewData["Title"] = "Index";
}
@section Styles{ 
    <style>
        #tags {
            border-left: 1px solid rgba(0, 0, 0, 0.125);
            border-right: 1px solid rgba(0, 0, 0, 0.125);
            padding: 0.3rem .5rem;
        }
    </style>
}
<div class="row">
    <div class="col-md-3 d-flex" style="flex-direction:column">
        <div class="list-group">
            <a class="list-group-item" href="#tags" data-toggle="collapse" role="button">标签</a>
            <div id="tags" class="collapse@(Model.FilterTags.Count>0?" show":string.Empty)">
                <form method="get">
                    @(await Component.InvokeAsync<TagViewComponent>(new { tagId = Model.FilterTags }))
                    <button class="btn btn-primary">筛选</button>
                </form>
            </div>
            <a class="list-group-item" asp-page="/Tags/Index">管理标签</a>
        </div>
        <div style="flex:1;background:url('/images/nichijou.jpg') center no-repeat"></div>
    </div>
    <div class="col-md-9">
        <div class="row mb-2">
            <div class="ml-1">
                <a asp-page="Create" class="">新建</a>
            </div>
            <form method="get" asp-page="/Project/Index" style="flex:1;" class="btn-group col-lg-5">
                <input class="form-control" name="q" />
                <button class="btn btn-secondary">查询</button>
            </form>
            <a class="small text-secondary" asp-page="/Projects/Query">高级查询</a>
        </div>
        <ul class="list-unstyled">
            @foreach (var item in Model.Project)
        {
            <li class="clearfix mb-2 border border-info p-1">
                <h5>
                    @*<span style="display:inline-block;padding:0 0.5rem" class="text-white rounded-circle bg-secondary">@startNum</span>*@
                    @Html.DisplayFor(modelItem => item.Name)
                    <small>(@item.Title)</small>
                </h5>
                <code>
                    @Html.DisplayFor(modelItem => item.Address)
                </code>
                <div>
                    <small>
                        @Html.DisplayFor(modelItem => item.Description)
                    </small>
                    <div class="float-right">
                        <small>
                            @Html.DisplayFor(modelItem => item.AddTime)
                        </small>
                        <small>
                            <a asp-page="./Edit" asp-route-id="@item.Id">修改</a>
                            <a asp-page="./Delete" asp-route-id="@item.Id">删除</a>
                        </small>
                    </div>
                </div>
            </li>
    }
        </ul>
        @(await Component.InvokeAsync<PageViewComponent>(new PageOptionModel { Option = Model.PageOption, Routes = Request.Query.ToDictionary(t => t.Key, t => t.Value.ToString()) }))
    </div>
</div>
